<%= f.input :title, label: false, input_html: { class: "input-lg" } %>
<%= f.input :tag_list, input_html: { data: { role: "tagsinput" } } %>
<hr />

<div class="row">
	<div class="col-sm-3">
		<%= f.association :list, collection: f.object.user.lists, include_blank: false %>
	</div>
	<div class="col-sm-9">
		<%= f.input :slug %>
	</div>
</div>


<% article_body = f.object.persisted_editing! %>
<%= hidden_field_tag :article_body_id, article_body.id %>
<%#= f.hidden_field :editing_body_id, value: article_body.id %>

<%= simple_fields_for article_body do |cf| %>
<%= cf.label :content %>
<div class="wd-editor form-group">
	<div class="wd-editor-toolbar btn-toolbar" role="toolbar">
		<a data-loading-text="正在保存" class="save btn btn-default btn-xs" href="<%= workspace_article_body_path(article_body) %>" data-method="put">立即保存</a>

		<p class="btn-text btn-xs">
			最后保存于: <span class="save-status">尚未保存</span> (<a href="<%= workspace_article_body_path(article_body) %>" target="_blank">预览</a>)
		</p>

		<button type="button" disabled="disabled" class="fullscreen btn btn-default btn-transparent btn-xs pull-right">
			<i class="fa fa-arrows-alt"></i>
		</button>
	</div>

	<div class="wd-editor-body">
		<div class="wd-editor-content">
			<%= cf.input :content, wrapper: "bootstrap-input", input_html: { rows: 20 } %>
		</div>

		<div class="wd-editor-sider wd-article-attachments">
			<%= cf.label :attachments %>

			<ul>
				<%= cf.fields_for :attachments do |builder| %>
					<li>
						<div class="inner">
							<span>
								<%= link_to builder.object.original_filename, public_path(builder.object.file.url) %>
							</span>
							<%= builder.check_box :_destroy %>
							<%= builder.hidden_field :id %>
							<a class="btn trash"><i class="fa fa-trash-o"></i></a>
							<a class="btn undo only-removed"><i class="fa fa-undo"></i></a>
						</div>
					</li>
				<% end %>
			</ul>

			<%= link_to_add_fields "上传附件", cf, :attachments do |b| %>
				<li>
					<div class="inner">
						<span></span>
						<%= b.file_field :file, as: :file %>
						<a class="btn trash"><i class="fa fa-trash-o"></i></a>
						<a class="btn undo only-removed"><i class="fa fa-undo"></i></a>
					</div>
				</li>
			<% end %>
		</div>
	</div>
</div>
<% end %>

<div class="form-group">
	<ul class="nav nav-tabs wd-tabs-radio">
		<li><span class="form-label">选择文章状态: </span></li>
		<% Article.get_state_values.each do |pair| %>
			<% name, value = *pair %>
		<li <%=raw 'class="active"' if f.object.state == value %>>
			<label data-togglea="tab" data-target="#<%= value %>"><%= f.radio_button :state, value %> <%= name %></label>
		</li>
		<% end %>
	</ul>
</div>

<div class="tab-content">
	<div class="tab-pane fade <%= 'active in' if f.object.state == :draft %>" id="draft">
	</div>
	<div class="tab-pane fade <%= 'active in' if f.object.state == :published %>" id="published">
		<div class="row">
			<div class="col-sm-4">
				<%= f.input :posted_at, as: :datepicker, include_blank: true %>
			</div>
		</div>
	</div>
	<div class="tab-pane fade <%= 'active in' if f.object.state == :archived %>" id="archived">
	</div>
</div>

<hr />


<% if f.object.present? %>
	<div class="form-group">
		<div class="checkbox">
			<label>
				<%= f.check_box :store_snapshot_to_version, class: "fields-toggle", data: { target: "#snapshot-fields" } %> 在文章编辑历史中, 保留之前版本的文章内容
			</label>
		</div>
	</div>

	<%= f.fields_for :snapshot do |builder| %>
	<div id="snapshot-fields" class="row">
		<div class="col-sm-3">
			<%= builder.input :posted_at, as: :datepicker, include_blank: true %>
		</div>
		<div class="col-sm-9">
			<%= builder.input :title %>
		</div>
	</div>
	<% end %>
<% end %>

<script>

$(".fields-toggle").each(function() {
	var self = $(this);
	self.change(function(event) {
		event.preventDefault();
		var targetSelector = self.data("target");
		$(targetSelector).toggle(this.checked);
	}).trigger("change");
}); 

$(".wd-article-attachments").each(function() {
	var ul = $(this).find("ul");
	$(this).on("click", ".btn.trash", function(event) {
			event.preventDefault();
			var li = $(event.target).closest("li");
			li.addClass("removed");
			li.find("input[type=checkbox]").attr("checked", "checked");
			li.find("input[type=file]").attr("disabled", "disabled");
		})
		.on("click", ".btn.undo", function(event) {
			event.preventDefault();
			var li = $(event.target).closest("li")
			li.removeClass("removed");
			li.find("input[type=checkbox]").removeAttr("checked");
			li.find("input[type=file]").removeAttr("disabled");
		})
		.on("click", ".add_fields", function(event) {
			event.preventDefault();
			var time = new Date().getTime();
			var regexp = new RegExp($(this).data('id'), 'g');
			var content = $(this).data('fields').replace(regexp, time);
			var element = $(content);

			var self = $(this);
			var fileInput = element.find("input[type=file]");
			fileInput.change(function(event) {
				if (this.files.length > 0) {
					var filename = this.files[0].name;
					ul.append(element);
					element.find("span").text(filename);
				}
			});

			fileInput[0].click();
		});
});


$(".wd-editor").each(function() {
	var editor = $(this);

	var editor = $(".wd-editor");
	var saveBtn = editor.find(".btn.save");
	window.saveStatus = editor.find(".save-status");
	$.extend(saveStatus, {
		touch: function() {
			$(this).data("savedTime", new Date());
			this.update();
		},

		update: function() {
			clearTimeout(this.updateTimeoutId);
			console.log("update")

			var time = $(this).data("savedTime");
			if (time) {
				$(this).text(moment(time).fromNow());
			}

			this.updateTimeoutId = setTimeout($.proxy(this.update, this), 5 * 1000);
		}
	});


	saveBtn.click(function(event) {
		event.preventDefault();
		event.stopPropagation();

		var self = $(this);
		var url = $(this).prop("href");
		var method = $(this).data("method") || "POST";
		var fd = new FormData();
		$.each(editor.find("textarea, input, select").serializeArray(), function(index, item) {
			fd.append(this["name"], this["value"]);
		});

		$.each(editor.find("input[type=file]").not("[disabled]"), function(index, input) {
			fd.append(this.name, this.files[0]);
		});

		$(this).button("loading");
		$.ajax(url, {
			type: method,
			data: fd,
			contentType: false,
			processData: false

		}).success(function(data) {
			editor.find(".removed").fadeOut(function() { $(this).remove() });
			self.button("reset");
			saveStatus.touch();

		}).error(function(xhr, status) {
			console.log(xhr, status)
			alert("保存失败");
			self.button("reset");
		})
	});
});

</script>